package leaf.component.mongoautogenerated;

import lombok.AllArgsConstructor;
import org.springframework.data.annotation.Transient;
import org.springframework.data.mongodb.core.FindAndModifyOptions;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.core.query.Update;
import org.springframework.stereotype.Component;

@AllArgsConstructor
@Component
public class SequenceGenerator {

    @Transient
    public static final String SEQ_KEY = "sequence";

    private MongoOperations mongoOperation;

    public Long getNextSequenceId(String key) {
        // get sequence id
        Query query = new Query(Criteria.where("_id").is(key));

        // increase sequence id by 1
        Update update = new Update();
        update.inc("seq", 1);

        // return new increased id
        FindAndModifyOptions options = new FindAndModifyOptions();
        options.returnNew(true).upsert(true);

        ChatMessageSequence seq = mongoOperation.findAndModify(query, update, options, ChatMessageSequence.class);

        // if no id, throws Exception
        // optional, just a way to tell user when the sequence id is failed to generate
        if (seq == null) throw new RuntimeException("Unable to get sequence id for key : " + key);

        return seq.getSeq();
    }
}
